 与其靠表示层来限制用户输入的值，还不如在应用程序和数据库层上进行 access control。任何情况下都不允许用户在没有取得相应权限的情况下获取或修改数据库中的记录。每个涉及数据库的查询都必须遵守这个原则，这可以通过把当前被授权的用户名作为查询语句的一部分来实现。  
 <b>例 3：</b>以下代码实施了与例 1 相同的功能，但是附加了一个限制，即为当前被授权的用户指定某一特定的获取清单的方式。  
 <pre>
...
userName = ctx.getAuthenticatedUserName();
id = Integer.decode(request.getParameter(&quot;invoiceID&quot;));
String query =
        &quot;SELECT * FROM invoices WHERE id = ? AND user = ?&quot;;
PreparedStatement stmt = conn.prepareStatement(query);
stmt.setInt(1, id);
stmt.setString(2, userName);
ResultSet results = stmt.execute();
...
</pre> 
下面是 Android 的等同内容： 
 <pre>
...
        PasswordAuthentication pa = authenticator.getPasswordAuthentication();
        String userName = pa.getUserName();
        String id = this.getIntent().getExtras().getString(&quot;invoiceID&quot;);
        String query = &quot;SELECT * FROM invoices WHERE id = ? AND user = ?&quot;;
        SQLiteDatabase db = this.openOrCreateDatabase(&quot;DB&quot;, MODE_PRIVATE, null);
        Cursor c = db.rawQuery(query, new Object[]{id, userName});
...
</pre>  
